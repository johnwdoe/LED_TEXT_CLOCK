Archive member included to satisfy reference by file (symbol)

/opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o (exit)
/opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                              ./src/ir.o (__do_clear_bss)
/opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a(memcpy.o)
                              ./src/i2c.o (memcpy)

Allocating common symbols
Common symbol       size              file

bitptr              0x1               ./src/ir.o
autobrValue         0x1               ./src/mxcontrol.o
packet              0x4               ./src/ir.o
spiptr              0x1               ./src/mxcontrol.o
t0_extended_int     0x1               ./main.o
uartRxBuf           0x3               ./main.o
printCoords         0x1               ./src/mxcontrol.o
irflags             0x1               ./src/ir.o
crow                0x1               ./src/mxcontrol.o
spibuf              0x3               ./src/mxcontrol.o
vmem                0x12              ./src/mxcontrol.o
ir_cmd              0x1               ./main.o
vbuf                0x12              ./src/mxcontrol.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./src/bcd.o
LOAD ./src/i2c.o
LOAD ./src/ir.o
LOAD ./src/mxcontrol.o
LOAD ./src/uart.o
LOAD ./main.o
START GROUP
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libm.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd84
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data.alpha
                0x0000000000000026       0xa3 ./src/mxcontrol.o
                0x0000000000000026                alpha
 .progmem.data.mMap
                0x00000000000000c9       0x42 ./main.o
                0x00000000000000c9                mMap
 .progmem.data.hMap
                0x000000000000010b       0x18 ./main.o
                0x000000000000010b                hMap
                0x0000000000000124                . = ALIGN (0x2)
 *fill*         0x0000000000000123        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000124                __ctors_start = .
 *(.ctors)
                0x0000000000000124                __ctors_end = .
                0x0000000000000124                __dtors_start = .
 *(.dtors)
                0x0000000000000124                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000124        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000124                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000124        0xc /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000130       0x16 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000130                __do_copy_data
 .init4         0x0000000000000146       0x10 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000146                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000156        0x4 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000015a        0x2 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x000000000000015a                __vector_12
                0x000000000000015a                __bad_interrupt
                0x000000000000015a                __vector_6
                0x000000000000015a                __vector_13
                0x000000000000015a                __vector_17
                0x000000000000015a                __vector_7
                0x000000000000015a                __vector_5
                0x000000000000015a                __vector_4
                0x000000000000015a                __vector_15
                0x000000000000015a                __vector_8
                0x000000000000015a                __vector_16
                0x000000000000015a                __vector_18
 .text          0x000000000000015c        0x0 ./src/bcd.o
 .text          0x000000000000015c        0x0 ./src/i2c.o
 .text          0x000000000000015c        0x0 ./src/ir.o
 .text          0x000000000000015c        0x0 ./src/mxcontrol.o
 .text          0x000000000000015c        0x0 ./src/uart.o
 .text          0x000000000000015c        0x0 ./main.o
 .text          0x000000000000015c        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text          0x000000000000015c        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000015c        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x000000000000015c        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a(memcpy.o)
                0x000000000000015c                . = ALIGN (0x2)
 *(.text.*)
 .text.bin2bcd  0x000000000000015c       0x30 ./src/bcd.o
                0x000000000000015c                bin2bcd
 .text.bcd2bin  0x000000000000018c       0x30 ./src/bcd.o
                0x000000000000018c                bcd2bin
 .text.i2c_init
                0x00000000000001bc        0xa ./src/i2c.o
                0x00000000000001bc                i2c_init
 .text.i2c_io   0x00000000000001c6       0xd6 ./src/i2c.o
                0x00000000000001c6                i2c_io
 .text.i2c_reg_write
                0x000000000000029c       0x58 ./src/i2c.o
                0x000000000000029c                i2c_reg_write
 .text.i2c_reg_read
                0x00000000000002f4       0x26 ./src/i2c.o
                0x00000000000002f4                i2c_reg_read
 .text.ir_init  0x000000000000031a       0x24 ./src/ir.o
                0x000000000000031a                ir_init
 .text.__vector_1
                0x000000000000033e      0x108 ./src/ir.o
                0x000000000000033e                __vector_1
 .text.__vector_3
                0x0000000000000446       0x28 ./src/ir.o
                0x0000000000000446                __vector_3
 .text.mxcontrol_init
                0x000000000000046e       0x3e ./src/mxcontrol.o
                0x000000000000046e                mxcontrol_init
 .text.mxcontrol_setbrightness
                0x00000000000004ac        0x4 ./src/mxcontrol.o
                0x00000000000004ac                mxcontrol_setbrightness
 .text.mxcontrol_setbrightnessauto
                0x00000000000004b0       0x24 ./src/mxcontrol.o
                0x00000000000004b0                mxcontrol_setbrightnessauto
 .text.mxcontrol_makepoint
                0x00000000000004d4       0x44 ./src/mxcontrol.o
                0x00000000000004d4                mxcontrol_makepoint
 .text.mxcontrol_makehline
                0x0000000000000518       0x3a ./src/mxcontrol.o
                0x0000000000000518                mxcontrol_makehline
 .text.mxcontrol_clear
                0x0000000000000552       0x10 ./src/mxcontrol.o
                0x0000000000000552                mxcontrol_clear
 .text.mxcontrol_draw
                0x0000000000000562       0xf2 ./src/mxcontrol.o
                0x0000000000000562                mxcontrol_draw
 .text.mxcontrol_blink
                0x0000000000000654       0x26 ./src/mxcontrol.o
                0x0000000000000654                mxcontrol_blink
 .text.mxcontrol_setprintcoords
                0x000000000000067a       0x12 ./src/mxcontrol.o
                0x000000000000067a                mxcontrol_setprintcoords
 .text.mxcontrol_print
                0x000000000000068c       0xa4 ./src/mxcontrol.o
                0x000000000000068c                mxcontrol_print
 .text.mxcontrol_printchar
                0x0000000000000730       0x28 ./src/mxcontrol.o
                0x0000000000000730                mxcontrol_printchar
 .text.__vector_9
                0x0000000000000758       0xfc ./src/mxcontrol.o
                0x0000000000000758                __vector_9
 .text.__vector_10
                0x0000000000000854       0x40 ./src/mxcontrol.o
                0x0000000000000854                __vector_10
 .text.__vector_14
                0x0000000000000894       0x48 ./src/mxcontrol.o
                0x0000000000000894                __vector_14
 .text.uart_init
                0x00000000000008dc       0x18 ./src/uart.o
                0x00000000000008dc                uart_init
 .text.uart_send
                0x00000000000008f4        0x8 ./src/uart.o
                0x00000000000008f4                uart_send
 .text.__vector_11
                0x00000000000008fc       0x48 ./src/uart.o
                0x00000000000008fc                __vector_11
 .text.init     0x0000000000000944       0x1a ./main.o
                0x0000000000000944                init
 .text.mapToMX  0x000000000000095e       0x4e ./main.o
                0x000000000000095e                mapToMX
 .text.timeToMX
                0x00000000000009ac       0x78 ./main.o
                0x00000000000009ac                timeToMX
 .text.ir_oncmdrecv
                0x0000000000000a24       0x10 ./main.o
                0x0000000000000a24                ir_oncmdrecv
 .text.uart_onrecv
                0x0000000000000a34       0x54 ./main.o
                0x0000000000000a34                uart_onrecv
 .text.test     0x0000000000000a88       0x1a ./main.o
                0x0000000000000a88                test
 .text.startup.main
                0x0000000000000aa2      0x222 ./main.o
                0x0000000000000aa2                main
 .text.__vector_2
                0x0000000000000cc4       0xaa ./main.o
                0x0000000000000cc4                __vector_2
 .text.libgcc.mul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000d6e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000d6e       0x12 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a(memcpy.o)
                0x0000000000000d6e                memcpy
                0x0000000000000d80                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d80        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
                0x0000000000000d80                exit
                0x0000000000000d80                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d80        0x4 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d84                _etext = .

.data           0x0000000000800060        0x6 load address 0x0000000000000d84
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./src/bcd.o
 .data          0x0000000000800060        0x0 ./src/i2c.o
 .data          0x0000000000800060        0x0 ./src/ir.o
 .data          0x0000000000800060        0x0 ./src/mxcontrol.o
 .data          0x0000000000800060        0x0 ./src/uart.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.data*)
 .data.mPosLast
                0x0000000000800060        0x1 ./main.o
                0x0000000000800060                mPosLast
 .data.hPosLast
                0x0000000000800061        0x1 ./main.o
                0x0000000000800061                hPosLast
 .data.buf      0x0000000000800062        0x3 ./main.o
                0x0000000000800062                buf
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800066                . = ALIGN (0x2)
 *fill*         0x0000000000800065        0x1 
                0x0000000000800066                _edata = .
                0x0000000000800066                PROVIDE (__data_end, .)

.bss            0x0000000000800066       0x3c
                0x0000000000800066                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800066        0x0 ./src/bcd.o
 .bss           0x0000000000800066        0x0 ./src/i2c.o
 .bss           0x0000000000800066        0x0 ./src/ir.o
 .bss           0x0000000000800066        0x0 ./src/mxcontrol.o
 .bss           0x0000000000800066        0x0 ./src/uart.o
 .bss           0x0000000000800066        0x0 ./main.o
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.bss*)
 .bss.t0_ovf_cnt
                0x0000000000800066        0x1 ./src/mxcontrol.o
                0x0000000000800066                t0_ovf_cnt
 .bss.mx_flags  0x0000000000800067        0x1 ./src/mxcontrol.o
                0x0000000000800067                mx_flags
 .bss.uartRxBuf_p
                0x0000000000800068        0x1 ./main.o
                0x0000000000800068                uartRxBuf_p
 .bss.br        0x0000000000800069        0x1 ./main.o
                0x0000000000800069                br
 .bss.framesvmode
                0x000000000080006a        0x1 ./main.o
                0x000000000080006a                framesvmode
 .bss.flags     0x000000000080006b        0x1 ./main.o
                0x000000000080006b                flags
 *(COMMON)
 COMMON         0x000000000080006c        0x6 ./src/ir.o
                0x000000000080006c                bitptr
                0x000000000080006d                packet
                0x0000000000800071                irflags
 COMMON         0x0000000000800072       0x2b ./src/mxcontrol.o
                0x0000000000800072                autobrValue
                0x0000000000800073                spiptr
                0x0000000000800074                printCoords
                0x0000000000800075                crow
                0x0000000000800076                spibuf
                0x0000000000800079                vmem
                0x000000000080008b                vbuf
 COMMON         0x000000000080009d        0x5 ./main.o
                0x000000000080009d                t0_extended_int
                0x000000000080009e                uartRxBuf
                0x00000000008000a1                ir_cmd
                0x00000000008000a2                PROVIDE (__bss_end, .)
                0x0000000000000d84                __data_load_start = LOADADDR (.data)
                0x0000000000000d8a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000a2        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008000a2                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/bcd.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./src/i2c.o
 .comment       0x0000000000000011       0x12 ./src/ir.o
 .comment       0x0000000000000011       0x12 ./src/mxcontrol.o
 .comment       0x0000000000000011       0x12 ./src/uart.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000020       0x20 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .debug_aranges
                0x0000000000000040       0x20 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x636
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_info    0x000000000000048c       0x8e /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_info    0x000000000000051a       0x8e /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .debug_info    0x00000000000005a8       0x8e /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0x48a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_abbrev  0x000000000000044e       0x14 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000462       0x14 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000000000000476       0x14 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0x15b
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_line    0x000000000000001d       0x65 /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_line    0x0000000000000082       0x6e /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_copy_data.o)
 .debug_line    0x00000000000000f0       0x6b /opt/cross/avr/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x17a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LED_MATRIX.elf elf32-avr)
LOAD linker stubs
