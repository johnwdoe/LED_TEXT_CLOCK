Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o (exit)
/opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
                              ./src/mxcontrol.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

crow                0x1               ./src/mxcontrol.o
spibuf              0x3               ./src/mxcontrol.o
vmem                0x12              ./src/mxcontrol.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
LOAD ./src/mxcontrol.o
LOAD ./main.o
START GROUP
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/libm.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x27c
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x10 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
                0x00000000000000f4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000104        0x8 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000010c        0x4 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
                0x000000000000010c                __vector_38
                0x000000000000010c                __vector_22
                0x000000000000010c                __vector_28
                0x000000000000010c                __vector_1
                0x000000000000010c                __vector_32
                0x000000000000010c                __vector_34
                0x000000000000010c                __vector_24
                0x000000000000010c                __vector_12
                0x000000000000010c                __vector_55
                0x000000000000010c                __vector_46
                0x000000000000010c                __bad_interrupt
                0x000000000000010c                __vector_6
                0x000000000000010c                __vector_31
                0x000000000000010c                __vector_35
                0x000000000000010c                __vector_39
                0x000000000000010c                __vector_3
                0x000000000000010c                __vector_23
                0x000000000000010c                __vector_30
                0x000000000000010c                __vector_45
                0x000000000000010c                __vector_25
                0x000000000000010c                __vector_11
                0x000000000000010c                __vector_54
                0x000000000000010c                __vector_13
                0x000000000000010c                __vector_17
                0x000000000000010c                __vector_19
                0x000000000000010c                __vector_56
                0x000000000000010c                __vector_7
                0x000000000000010c                __vector_49
                0x000000000000010c                __vector_41
                0x000000000000010c                __vector_43
                0x000000000000010c                __vector_27
                0x000000000000010c                __vector_5
                0x000000000000010c                __vector_33
                0x000000000000010c                __vector_47
                0x000000000000010c                __vector_52
                0x000000000000010c                __vector_37
                0x000000000000010c                __vector_4
                0x000000000000010c                __vector_44
                0x000000000000010c                __vector_51
                0x000000000000010c                __vector_9
                0x000000000000010c                __vector_2
                0x000000000000010c                __vector_21
                0x000000000000010c                __vector_15
                0x000000000000010c                __vector_36
                0x000000000000010c                __vector_29
                0x000000000000010c                __vector_40
                0x000000000000010c                __vector_8
                0x000000000000010c                __vector_26
                0x000000000000010c                __vector_48
                0x000000000000010c                __vector_14
                0x000000000000010c                __vector_53
                0x000000000000010c                __vector_10
                0x000000000000010c                __vector_50
                0x000000000000010c                __vector_16
                0x000000000000010c                __vector_18
                0x000000000000010c                __vector_20
                0x000000000000010c                __vector_42
 .text          0x0000000000000110        0x0 ./src/mxcontrol.o
 .text          0x0000000000000110        0x0 ./main.o
 .text          0x0000000000000110        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000110        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000110                . = ALIGN (0x2)
 *(.text.*)
 .text.mxcontrol_init
                0x0000000000000110       0x48 ./src/mxcontrol.o
                0x0000000000000110                mxcontrol_init
 .text.mxcontrol_drawnextline
                0x0000000000000158      0x10e ./src/mxcontrol.o
                0x0000000000000158                mxcontrol_drawnextline
 .text.main     0x0000000000000266       0x12 ./main.o
                0x0000000000000266                main
 .text.libgcc.mul
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000278                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000278        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
                0x0000000000000278                exit
                0x0000000000000278                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000278        0x4 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000027c                _etext = .

.data           0x0000000000800200        0x0 load address 0x000000000000027c
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x0 ./src/mxcontrol.o
 .data          0x0000000000800200        0x0 ./main.o
 .data          0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800200                . = ALIGN (0x2)
                0x0000000000800200                _edata = .
                0x0000000000800200                PROVIDE (__data_end, .)

.bss            0x0000000000800200       0x16
                0x0000000000800200                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800200        0x0 ./src/mxcontrol.o
 .bss           0x0000000000800200        0x0 ./main.o
 .bss           0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800200        0x0 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800200       0x16 ./src/mxcontrol.o
                0x0000000000800200                crow
                0x0000000000800201                spibuf
                0x0000000000800204                vmem
                0x0000000000800216                PROVIDE (__bss_end, .)
                0x000000000000027c                __data_load_start = LOADADDR (.data)
                0x000000000000027c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800216        0x0
                0x0000000000800216                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800216                PROVIDE (__noinit_end, .)
                0x0000000000800216                _end = .
                0x0000000000800216                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x8d0
 *(.stab)
 .stab          0x0000000000000000      0x600 ./src/mxcontrol.o
 .stab          0x0000000000000600      0x2d0 ./main.o
                                        0x498 (size before relaxing)

.stabstr        0x0000000000000000      0xc2b
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc2b ./src/mxcontrol.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/mxcontrol.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000020       0x20 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xcd8
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xbbc /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 .debug_info    0x0000000000000bbc       0x8e /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .debug_info    0x0000000000000c4a       0x8e /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0xb42
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0xb1a /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 .debug_abbrev  0x0000000000000b1a       0x14 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000b2e       0x14 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000       0xed
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o
 .debug_line    0x000000000000001d       0x65 /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_exit.o)
 .debug_line    0x0000000000000082       0x6b /opt/cross/avr/lib/gcc/avr/4.8.3/avr6/libgcc.a(_clear_bss.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x3e6
 *(.debug_str)
 .debug_str     0x0000000000000000      0x3e6 /opt/cross/avr/lib/gcc/avr/4.8.3/../../../../avr/lib/avr6/crtm2560.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LED_MATRIX.elf elf32-avr)
LOAD linker stubs
